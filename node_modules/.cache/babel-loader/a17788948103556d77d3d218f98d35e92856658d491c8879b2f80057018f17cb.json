{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\reactjs-netflixclone\\\\src\\\\Components\\\\RowPost\\\\RowPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Youtube from 'react-youtube';\nimport './RowPost.css';\nimport { imageUrl, API_KEY } from '../../constants/constants';\nimport axios from '../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowPost(props) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [urlId, seturlId] = useState('');\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      console.log(response.data);\n      setMovies(response.data.results);\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  const handleMovie = id => {\n    console.log(id);\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response => {\n      if (response.data.results.length !== 0) {\n        seturlId(response.data.results[0]);\n      } else {\n        console.log('Array empty');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovie(obj.id),\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        src: `${imageUrl + obj.backdrop_path}`,\n        alt: \"poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), urlId && /*#__PURE__*/_jsxDEV(Youtube, {\n      opts: opts,\n      videoId: urlId.key\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(RowPost, \"HTMPn/ZOe4ozDzgF9mAt9YCbYZE=\");\n_c = RowPost;\nexport default RowPost;\nvar _c;\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useEffect","useState","Youtube","imageUrl","API_KEY","axios","RowPost","props","movies","setMovies","urlId","seturlId","get","url","then","response","console","log","data","results","opts","height","width","playerVars","autoplay","handleMovie","id","length","title","map","obj","isSmall","backdrop_path","key"],"sources":["C:/Users/rahul/reactjs-netflixclone/src/Components/RowPost/RowPost.js"],"sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport Youtube from 'react-youtube'\r\nimport './RowPost.css'\r\nimport {imageUrl,API_KEY} from '../../constants/constants'\r\nimport axios from '../../axios'\r\n\r\nfunction RowPost(props) {\r\n  const [movies, setMovies] = useState([])\r\n  const [urlId, seturlId] = useState('')\r\n  useEffect(() => {\r\n    axios.get(props.url).then(response=>{\r\n      console.log(response.data)\r\n      setMovies(response.data.results)\r\n    })\r\n  }, [])\r\n  const opts = {\r\n    height: '390',\r\n    width: '100%',\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleMovie =(id)=>{\r\n    console.log(id)\r\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response=>{\r\n      if(response.data.results.length!==0){\r\n        seturlId(response.data.results[0])\r\n      }else{\r\n        console.log('Array empty')\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <div className='row'>\r\n        <h2>{props.title}</h2>\r\n        <div className=\"posters\">\r\n           {movies.map((obj)=>\r\n            <img onClick={()=>handleMovie(obj.id)} className={ props.isSmall ? 'smallPoster' :'poster'} src={`${imageUrl+obj.backdrop_path}`} alt=\"poster\" />\r\n           )}\r\n           \r\n\r\n        </div>\r\n      { urlId && <Youtube opts={opts} videoId={urlId.key} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RowPost"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC9C,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAO,eAAe;AACtB,SAAQC,QAAQ,EAACC,OAAO,QAAO,2BAA2B;AAC1D,OAAOC,KAAK,MAAM,aAAa;AAAA;AAE/B,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtCD,SAAS,CAAC,MAAM;IACdK,KAAK,CAACO,GAAG,CAACL,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAE;MAClCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1BT,SAAS,CAACM,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACV;MACAC,QAAQ,EAAE;IACZ;EACF,CAAC;EAED,MAAMC,WAAW,GAAGC,EAAE,IAAG;IACvBV,OAAO,CAACC,GAAG,CAACS,EAAE,CAAC;IACfrB,KAAK,CAACO,GAAG,CAAE,UAASc,EAAG,mBAAkBtB,OAAQ,iBAAgB,CAAC,CAACU,IAAI,CAACC,QAAQ,IAAE;MAChF,IAAGA,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACQ,MAAM,KAAG,CAAC,EAAC;QAClChB,QAAQ,CAACI,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MACpC,CAAC,MAAI;QACHH,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC5B;IACF,CAAC,CAAC;EACJ,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAA,UAAKV,KAAK,CAACqB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAK,SAAS,EAAC,SAAS;MAAA,UACpBpB,MAAM,CAACqB,GAAG,CAAEC,GAAG,iBACf;QAAK,OAAO,EAAE,MAAIL,WAAW,CAACK,GAAG,CAACJ,EAAE,CAAE;QAAC,SAAS,EAAGnB,KAAK,CAACwB,OAAO,GAAG,aAAa,GAAE,QAAS;QAAC,GAAG,EAAG,GAAE5B,QAAQ,GAAC2B,GAAG,CAACE,aAAc,EAAE;QAAC,GAAG,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IACjJ;MAAA;MAAA;MAAA;IAAA,QAGE,EACNtB,KAAK,iBAAI,QAAC,OAAO;MAAC,IAAI,EAAEU,IAAK;MAAC,OAAO,EAAEV,KAAK,CAACuB;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAClD;AAEV;AAAC,GAzCQ3B,OAAO;AAAA,KAAPA,OAAO;AA2ChB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}